{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1RHAnAMV7tPnvj3KNvi1euGVj4nprjtxd","timestamp":1657856011139}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"byjQLN8txFeQ","executionInfo":{"status":"ok","timestamp":1672628912182,"user_tz":-540,"elapsed":646,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"fbe495bf-1bd2-4e05-ad84-d05d0cb10ed9"},"source":["import pandas as pd \n"," \n","life = pd.read_csv('https://raw.githubusercontent.com/dongupak/DataSciPy\\\n","/master/data/csv/life_expectancy.csv')\n","print(life.head())"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["       Country  Year      Status  Life expectancy  Adult mortality  \\\n","0  Afghanistan  2015  Developing             65.0            263.0   \n","1  Afghanistan  2014  Developing             59.9            271.0   \n","2  Afghanistan  2013  Developing             59.9            268.0   \n","3  Afghanistan  2012  Developing             59.5            272.0   \n","4  Afghanistan  2011  Developing             59.2            275.0   \n","\n","   Infant deaths  Alcohol  Percentage expenditure  Hepatitis B  Measles  ...  \\\n","0             62     0.01               71.279624         65.0     1154  ...   \n","1             64     0.01               73.523582         62.0      492  ...   \n","2             66     0.01               73.219243         64.0      430  ...   \n","3             69     0.01               78.184215         67.0     2787  ...   \n","4             71     0.01                7.097109         68.0     3013  ...   \n","\n","   Polio  Total expenditure  Diphtheria  HIV/AIDS         GDP  Population  \\\n","0    6.0               8.16        65.0       0.1  584.259210  33736494.0   \n","1   58.0               8.18        62.0       0.1  612.696514    327582.0   \n","2   62.0               8.13        64.0       0.1  631.744976  31731688.0   \n","3   67.0               8.52        67.0       0.1  669.959000   3696958.0   \n","4   68.0               7.87        68.0       0.1   63.537231   2978599.0   \n","\n","   Thinness 1-19 years  Thinness 5-9 years  Income composition of resources  \\\n","0                 17.2                17.3                            0.479   \n","1                 17.5                17.5                            0.476   \n","2                 17.7                17.7                            0.470   \n","3                 17.9                18.0                            0.463   \n","4                 18.2                18.2                            0.454   \n","\n","   Schooling  \n","0       10.1  \n","1       10.0  \n","2        9.9  \n","3        9.8  \n","4        9.5  \n","\n","[5 rows x 22 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":416},"id":"Y61CuB1hI9bm","executionInfo":{"status":"ok","timestamp":1672628917752,"user_tz":-540,"elapsed":489,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"eefe0159-2d07-4f83-947d-73bf539d4ea2"},"source":["# 기대수명 데이터를 살펴보는 메소드 describe()\n","life.describe()"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Year  Life expectancy  Adult mortality  Infant deaths  \\\n","count  2938.000000      2928.000000      2928.000000    2938.000000   \n","mean   2007.518720        69.224932       164.796448      30.303948   \n","std       4.613841         9.523867       124.292079     117.926501   \n","min    2000.000000        36.300000         1.000000       0.000000   \n","25%    2004.000000        63.100000        74.000000       0.000000   \n","50%    2008.000000        72.100000       144.000000       3.000000   \n","75%    2012.000000        75.700000       228.000000      22.000000   \n","max    2015.000000        89.000000       723.000000    1800.000000   \n","\n","           Alcohol  Percentage expenditure  Hepatitis B        Measles  \\\n","count  2744.000000             2938.000000  2385.000000    2938.000000   \n","mean      4.602861              738.251295    80.940461    2419.592240   \n","std       4.052413             1987.914858    25.070016   11467.272489   \n","min       0.010000                0.000000     1.000000       0.000000   \n","25%       0.877500                4.685343    77.000000       0.000000   \n","50%       3.755000               64.912906    92.000000      17.000000   \n","75%       7.702500              441.534144    97.000000     360.250000   \n","max      17.870000            19479.911610    99.000000  212183.000000   \n","\n","               BMI  Under-five deaths        Polio  Total expenditure  \\\n","count  2904.000000        2938.000000  2919.000000         2712.00000   \n","mean     38.321247          42.035739    82.550188            5.93819   \n","std      20.044034         160.445548    23.428046            2.49832   \n","min       1.000000           0.000000     3.000000            0.37000   \n","25%      19.300000           0.000000    78.000000            4.26000   \n","50%      43.500000           4.000000    93.000000            5.75500   \n","75%      56.200000          28.000000    97.000000            7.49250   \n","max      87.300000        2500.000000    99.000000           17.60000   \n","\n","        Diphtheria     HIV/AIDS            GDP    Population  \\\n","count  2919.000000  2938.000000    2490.000000  2.286000e+03   \n","mean     82.324084     1.742103    7483.158469  1.275338e+07   \n","std      23.716912     5.077785   14270.169342  6.101210e+07   \n","min       2.000000     0.100000       1.681350  3.400000e+01   \n","25%      78.000000     0.100000     463.935626  1.957932e+05   \n","50%      93.000000     0.100000    1766.947595  1.386542e+06   \n","75%      97.000000     0.800000    5910.806335  7.420359e+06   \n","max      99.000000    50.600000  119172.741800  1.293859e+09   \n","\n","       Thinness 1-19 years  Thinness 5-9 years  \\\n","count          2904.000000         2904.000000   \n","mean              4.839704            4.870317   \n","std               4.420195            4.508882   \n","min               0.100000            0.100000   \n","25%               1.600000            1.500000   \n","50%               3.300000            3.300000   \n","75%               7.200000            7.200000   \n","max              27.700000           28.600000   \n","\n","       Income composition of resources    Schooling  \n","count                      2771.000000  2775.000000  \n","mean                          0.627551    11.992793  \n","std                           0.210904     3.358920  \n","min                           0.000000     0.000000  \n","25%                           0.493000    10.100000  \n","50%                           0.677000    12.300000  \n","75%                           0.779000    14.300000  \n","max                           0.948000    20.700000  "],"text/html":["\n","  <div id=\"df-7e103cf0-52e0-45cb-998f-db6c4f22a8dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Life expectancy</th>\n","      <th>Adult mortality</th>\n","      <th>Infant deaths</th>\n","      <th>Alcohol</th>\n","      <th>Percentage expenditure</th>\n","      <th>Hepatitis B</th>\n","      <th>Measles</th>\n","      <th>BMI</th>\n","      <th>Under-five deaths</th>\n","      <th>Polio</th>\n","      <th>Total expenditure</th>\n","      <th>Diphtheria</th>\n","      <th>HIV/AIDS</th>\n","      <th>GDP</th>\n","      <th>Population</th>\n","      <th>Thinness 1-19 years</th>\n","      <th>Thinness 5-9 years</th>\n","      <th>Income composition of resources</th>\n","      <th>Schooling</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2938.000000</td>\n","      <td>2928.000000</td>\n","      <td>2928.000000</td>\n","      <td>2938.000000</td>\n","      <td>2744.000000</td>\n","      <td>2938.000000</td>\n","      <td>2385.000000</td>\n","      <td>2938.000000</td>\n","      <td>2904.000000</td>\n","      <td>2938.000000</td>\n","      <td>2919.000000</td>\n","      <td>2712.00000</td>\n","      <td>2919.000000</td>\n","      <td>2938.000000</td>\n","      <td>2490.000000</td>\n","      <td>2.286000e+03</td>\n","      <td>2904.000000</td>\n","      <td>2904.000000</td>\n","      <td>2771.000000</td>\n","      <td>2775.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2007.518720</td>\n","      <td>69.224932</td>\n","      <td>164.796448</td>\n","      <td>30.303948</td>\n","      <td>4.602861</td>\n","      <td>738.251295</td>\n","      <td>80.940461</td>\n","      <td>2419.592240</td>\n","      <td>38.321247</td>\n","      <td>42.035739</td>\n","      <td>82.550188</td>\n","      <td>5.93819</td>\n","      <td>82.324084</td>\n","      <td>1.742103</td>\n","      <td>7483.158469</td>\n","      <td>1.275338e+07</td>\n","      <td>4.839704</td>\n","      <td>4.870317</td>\n","      <td>0.627551</td>\n","      <td>11.992793</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.613841</td>\n","      <td>9.523867</td>\n","      <td>124.292079</td>\n","      <td>117.926501</td>\n","      <td>4.052413</td>\n","      <td>1987.914858</td>\n","      <td>25.070016</td>\n","      <td>11467.272489</td>\n","      <td>20.044034</td>\n","      <td>160.445548</td>\n","      <td>23.428046</td>\n","      <td>2.49832</td>\n","      <td>23.716912</td>\n","      <td>5.077785</td>\n","      <td>14270.169342</td>\n","      <td>6.101210e+07</td>\n","      <td>4.420195</td>\n","      <td>4.508882</td>\n","      <td>0.210904</td>\n","      <td>3.358920</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2000.000000</td>\n","      <td>36.300000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.010000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>0.37000</td>\n","      <td>2.000000</td>\n","      <td>0.100000</td>\n","      <td>1.681350</td>\n","      <td>3.400000e+01</td>\n","      <td>0.100000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2004.000000</td>\n","      <td>63.100000</td>\n","      <td>74.000000</td>\n","      <td>0.000000</td>\n","      <td>0.877500</td>\n","      <td>4.685343</td>\n","      <td>77.000000</td>\n","      <td>0.000000</td>\n","      <td>19.300000</td>\n","      <td>0.000000</td>\n","      <td>78.000000</td>\n","      <td>4.26000</td>\n","      <td>78.000000</td>\n","      <td>0.100000</td>\n","      <td>463.935626</td>\n","      <td>1.957932e+05</td>\n","      <td>1.600000</td>\n","      <td>1.500000</td>\n","      <td>0.493000</td>\n","      <td>10.100000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2008.000000</td>\n","      <td>72.100000</td>\n","      <td>144.000000</td>\n","      <td>3.000000</td>\n","      <td>3.755000</td>\n","      <td>64.912906</td>\n","      <td>92.000000</td>\n","      <td>17.000000</td>\n","      <td>43.500000</td>\n","      <td>4.000000</td>\n","      <td>93.000000</td>\n","      <td>5.75500</td>\n","      <td>93.000000</td>\n","      <td>0.100000</td>\n","      <td>1766.947595</td>\n","      <td>1.386542e+06</td>\n","      <td>3.300000</td>\n","      <td>3.300000</td>\n","      <td>0.677000</td>\n","      <td>12.300000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2012.000000</td>\n","      <td>75.700000</td>\n","      <td>228.000000</td>\n","      <td>22.000000</td>\n","      <td>7.702500</td>\n","      <td>441.534144</td>\n","      <td>97.000000</td>\n","      <td>360.250000</td>\n","      <td>56.200000</td>\n","      <td>28.000000</td>\n","      <td>97.000000</td>\n","      <td>7.49250</td>\n","      <td>97.000000</td>\n","      <td>0.800000</td>\n","      <td>5910.806335</td>\n","      <td>7.420359e+06</td>\n","      <td>7.200000</td>\n","      <td>7.200000</td>\n","      <td>0.779000</td>\n","      <td>14.300000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2015.000000</td>\n","      <td>89.000000</td>\n","      <td>723.000000</td>\n","      <td>1800.000000</td>\n","      <td>17.870000</td>\n","      <td>19479.911610</td>\n","      <td>99.000000</td>\n","      <td>212183.000000</td>\n","      <td>87.300000</td>\n","      <td>2500.000000</td>\n","      <td>99.000000</td>\n","      <td>17.60000</td>\n","      <td>99.000000</td>\n","      <td>50.600000</td>\n","      <td>119172.741800</td>\n","      <td>1.293859e+09</td>\n","      <td>27.700000</td>\n","      <td>28.600000</td>\n","      <td>0.948000</td>\n","      <td>20.700000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e103cf0-52e0-45cb-998f-db6c4f22a8dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7e103cf0-52e0-45cb-998f-db6c4f22a8dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7e103cf0-52e0-45cb-998f-db6c4f22a8dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44PtQAc813hm","executionInfo":{"status":"ok","timestamp":1672628922213,"user_tz":-540,"elapsed":471,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"0a6e9b77-124b-4dde-c3f4-f3dfcab30c73"},"source":["life = life[['Life expectancy', 'Alcohol', 'Percentage expenditure', 'Measles', 'Polio', 'BMI', 'GDP', 'Thinness 1-19 years']]\n","life.dropna(inplace = True)\n","print(life)"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["      Life expectancy  Alcohol  Percentage expenditure  Measles  Polio   BMI  \\\n","0                65.0     0.01               71.279624     1154    6.0  19.1   \n","1                59.9     0.01               73.523582      492   58.0  18.6   \n","2                59.9     0.01               73.219243      430   62.0  18.1   \n","3                59.5     0.01               78.184215     2787   67.0  17.6   \n","4                59.2     0.01                7.097109     3013   68.0  17.2   \n","...               ...      ...                     ...      ...    ...   ...   \n","2933             44.3     4.36                0.000000       31   67.0  27.1   \n","2934             44.5     4.06                0.000000      998    7.0  26.7   \n","2935             44.8     4.43                0.000000      304   73.0  26.3   \n","2936             45.3     1.72                0.000000      529   76.0  25.9   \n","2937             46.0     1.68                0.000000     1483   78.0  25.5   \n","\n","             GDP  Thinness 1-19 years  \n","0     584.259210                 17.2  \n","1     612.696514                 17.5  \n","2     631.744976                 17.7  \n","3     669.959000                 17.9  \n","4      63.537231                 18.2  \n","...          ...                  ...  \n","2933  454.366654                  9.4  \n","2934  453.351155                  9.8  \n","2935   57.348340                  1.2  \n","2936  548.587312                  1.6  \n","2937  547.358878                 11.0  \n","\n","[2306 rows x 8 columns]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/pandas/util/_decorators.py:311: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  return func(*args, **kwargs)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GvJspZFaJFTp","executionInfo":{"status":"ok","timestamp":1672628929124,"user_tz":-540,"elapsed":469,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"c186008d-51e0-4a59-b73b-187ee54657c7"},"source":["life.shape"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2306, 8)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3UIjR8183tyg","executionInfo":{"status":"ok","timestamp":1672628936230,"user_tz":-540,"elapsed":1338,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"761b66a3-772f-4062-bd60-7da86fab6183"},"source":["from sklearn.model_selection import train_test_split\n","\n","X = life[['Alcohol', 'Percentage expenditure', 'Measles', 'Polio', 'BMI', 'GDP', 'Thinness 1-19 years']]\n","y = life[['Life expectancy']]\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)\n","print(X_train.shape, y_train.shape, X_test.shape, y_test.shape)"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["(1844, 7) (1844, 1) (462, 7) (462, 1)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l9iDGA6f8jS9","executionInfo":{"status":"ok","timestamp":1672628945816,"user_tz":-540,"elapsed":465,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"94511594-4456-46fd-de4e-b3898b2c44c9"},"source":["from sklearn import preprocessing\n","scaler = preprocessing.StandardScaler().fit(X_train)\n","X_train = scaler.transform(X_train)\n","X_test = scaler.transform(X_test)\n","X_train, X_test"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 0.71582128,  2.54953497, -0.17377704, ..., -0.6416406 ,\n","          1.8726764 , -0.69559007],\n","        [-0.61730939, -0.22664989, -0.22229835, ...,  0.51211389,\n","         -0.31247503, -0.80584743],\n","        [ 0.74833666, -0.41045773, -0.22229835, ...,  0.90338716,\n","         -0.50590322, -0.80584743],\n","        ...,\n","        [-1.03750817, -0.43431181, -0.22229835, ..., -1.25864844,\n","         -0.52520411,  1.59776322],\n","        [ 0.38816628, -0.43369339, -0.22229835, ...,  0.09575901,\n","         -0.52473919, -0.12225174],\n","        [ 0.16556097, -0.38514479, -0.22229835, ...,  1.19433394,\n","         -0.46191747, -0.71764154]]),\n"," array([[ 1.94390225,  2.17651552, -0.21856594, ...,  1.01876261,\n","          1.94793567, -0.93815628],\n","        [-1.0475129 , -0.28978119, -0.22229835, ..., -1.59975846,\n","         -0.26183187,  0.25262331],\n","        [-1.04251054, -0.43181949, -0.22229835, ...,  1.51537867,\n","         -0.47450401, -1.02636217],\n","        ...,\n","        [-0.06204671, -0.40468399, -0.22229835, ..., -0.59649369,\n","         -0.2715223 ,  0.69365279],\n","        [ 1.33111236,  0.8423123 , -0.2109145 , ..., -1.5646442 ,\n","          0.9997139 , -0.89405333],\n","        [ 0.1455515 ,  0.03757027, -0.22229835, ..., -1.58470949,\n","          0.07864515, -0.71764154]]))"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"TZSAJPcgHa2o","executionInfo":{"status":"ok","timestamp":1672628966445,"user_tz":-540,"elapsed":3536,"user":{"displayName":"양희철","userId":"09168520931095458571"}}},"source":["import tensorflow as tf\n","from tensorflow import keras\n","\n","model = keras.Sequential([\n","   keras.layers.Dense(8, activation='relu'),\n","   keras.layers.Dense(8, activation='relu'),\n","   keras.layers.Dense(1, activation='relu')\n","])\n"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"vVXEU09R6Gag","executionInfo":{"status":"ok","timestamp":1672628968909,"user_tz":-540,"elapsed":2,"user":{"displayName":"양희철","userId":"09168520931095458571"}}},"source":["model.compile(optimizer='adam',\n","             loss='mse',\n","             metrics=['mse'])"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qa7zTpoo6KGD","executionInfo":{"status":"ok","timestamp":1672628994047,"user_tz":-540,"elapsed":21839,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"a8e64cdf-7339-456c-ca2e-37a05c17d0de"},"source":["model.fit(X_train, y_train, epochs=100)"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","58/58 [==============================] - 1s 2ms/step - loss: 4802.4619 - mse: 4802.4619\n","Epoch 2/100\n","58/58 [==============================] - 0s 2ms/step - loss: 4673.4346 - mse: 4673.4346\n","Epoch 3/100\n","58/58 [==============================] - 0s 2ms/step - loss: 4441.7979 - mse: 4441.7979\n","Epoch 4/100\n","58/58 [==============================] - 0s 2ms/step - loss: 4028.1978 - mse: 4028.1978\n","Epoch 5/100\n","58/58 [==============================] - 0s 2ms/step - loss: 3382.2461 - mse: 3382.2461\n","Epoch 6/100\n","58/58 [==============================] - 0s 2ms/step - loss: 2600.2869 - mse: 2600.2869\n","Epoch 7/100\n","58/58 [==============================] - 0s 2ms/step - loss: 1823.4756 - mse: 1823.4756\n","Epoch 8/100\n","58/58 [==============================] - 0s 2ms/step - loss: 1187.5142 - mse: 1187.5142\n","Epoch 9/100\n","58/58 [==============================] - 0s 2ms/step - loss: 757.6248 - mse: 757.6248\n","Epoch 10/100\n","58/58 [==============================] - 0s 2ms/step - loss: 511.2803 - mse: 511.2803\n","Epoch 11/100\n","58/58 [==============================] - 0s 2ms/step - loss: 386.8667 - mse: 386.8667\n","Epoch 12/100\n","58/58 [==============================] - 0s 2ms/step - loss: 322.8422 - mse: 322.8422\n","Epoch 13/100\n","58/58 [==============================] - 0s 2ms/step - loss: 286.0426 - mse: 286.0426\n","Epoch 14/100\n","58/58 [==============================] - 0s 2ms/step - loss: 260.0651 - mse: 260.0651\n","Epoch 15/100\n","58/58 [==============================] - 0s 2ms/step - loss: 240.1879 - mse: 240.1879\n","Epoch 16/100\n","58/58 [==============================] - 0s 2ms/step - loss: 223.2952 - mse: 223.2952\n","Epoch 17/100\n","58/58 [==============================] - 0s 2ms/step - loss: 208.5492 - mse: 208.5492\n","Epoch 18/100\n","58/58 [==============================] - 0s 2ms/step - loss: 195.4834 - mse: 195.4834\n","Epoch 19/100\n","58/58 [==============================] - 0s 2ms/step - loss: 183.7233 - mse: 183.7233\n","Epoch 20/100\n","58/58 [==============================] - 0s 2ms/step - loss: 173.2105 - mse: 173.2105\n","Epoch 21/100\n","58/58 [==============================] - 0s 2ms/step - loss: 163.5457 - mse: 163.5457\n","Epoch 22/100\n","58/58 [==============================] - 0s 2ms/step - loss: 154.7552 - mse: 154.7552\n","Epoch 23/100\n","58/58 [==============================] - 0s 2ms/step - loss: 146.7035 - mse: 146.7035\n","Epoch 24/100\n","58/58 [==============================] - 0s 2ms/step - loss: 139.1961 - mse: 139.1961\n","Epoch 25/100\n","58/58 [==============================] - 0s 2ms/step - loss: 132.2371 - mse: 132.2371\n","Epoch 26/100\n","58/58 [==============================] - 0s 2ms/step - loss: 125.9291 - mse: 125.9291\n","Epoch 27/100\n","58/58 [==============================] - 0s 2ms/step - loss: 119.6250 - mse: 119.6250\n","Epoch 28/100\n","58/58 [==============================] - 0s 2ms/step - loss: 113.8980 - mse: 113.8980\n","Epoch 29/100\n","58/58 [==============================] - 0s 2ms/step - loss: 108.5783 - mse: 108.5783\n","Epoch 30/100\n","58/58 [==============================] - 0s 2ms/step - loss: 103.8718 - mse: 103.8718\n","Epoch 31/100\n","58/58 [==============================] - 0s 2ms/step - loss: 98.8453 - mse: 98.8453\n","Epoch 32/100\n","58/58 [==============================] - 0s 2ms/step - loss: 94.4882 - mse: 94.4882\n","Epoch 33/100\n","58/58 [==============================] - 0s 2ms/step - loss: 90.1813 - mse: 90.1813\n","Epoch 34/100\n","58/58 [==============================] - 0s 2ms/step - loss: 86.2816 - mse: 86.2816\n","Epoch 35/100\n","58/58 [==============================] - 0s 2ms/step - loss: 82.6633 - mse: 82.6633\n","Epoch 36/100\n","58/58 [==============================] - 0s 2ms/step - loss: 78.9037 - mse: 78.9037\n","Epoch 37/100\n","58/58 [==============================] - 0s 2ms/step - loss: 75.6970 - mse: 75.6970\n","Epoch 38/100\n","58/58 [==============================] - 0s 2ms/step - loss: 72.5913 - mse: 72.5913\n","Epoch 39/100\n","58/58 [==============================] - 0s 2ms/step - loss: 69.5938 - mse: 69.5938\n","Epoch 40/100\n","58/58 [==============================] - 0s 2ms/step - loss: 66.8323 - mse: 66.8323\n","Epoch 41/100\n","58/58 [==============================] - 0s 2ms/step - loss: 64.5395 - mse: 64.5395\n","Epoch 42/100\n","58/58 [==============================] - 0s 2ms/step - loss: 62.0383 - mse: 62.0383\n","Epoch 43/100\n","58/58 [==============================] - 0s 2ms/step - loss: 60.0573 - mse: 60.0573\n","Epoch 44/100\n","58/58 [==============================] - 0s 2ms/step - loss: 58.2827 - mse: 58.2827\n","Epoch 45/100\n","58/58 [==============================] - 0s 2ms/step - loss: 56.6643 - mse: 56.6643\n","Epoch 46/100\n","58/58 [==============================] - 0s 2ms/step - loss: 55.0942 - mse: 55.0942\n","Epoch 47/100\n","58/58 [==============================] - 0s 2ms/step - loss: 53.5349 - mse: 53.5349\n","Epoch 48/100\n","58/58 [==============================] - 0s 2ms/step - loss: 52.2735 - mse: 52.2735\n","Epoch 49/100\n","58/58 [==============================] - 0s 2ms/step - loss: 51.0237 - mse: 51.0237\n","Epoch 50/100\n","58/58 [==============================] - 0s 2ms/step - loss: 49.7658 - mse: 49.7658\n","Epoch 51/100\n","58/58 [==============================] - 0s 2ms/step - loss: 48.7320 - mse: 48.7320\n","Epoch 52/100\n","58/58 [==============================] - 0s 2ms/step - loss: 47.7542 - mse: 47.7542\n","Epoch 53/100\n","58/58 [==============================] - 0s 2ms/step - loss: 46.8247 - mse: 46.8247\n","Epoch 54/100\n","58/58 [==============================] - 0s 2ms/step - loss: 45.7897 - mse: 45.7897\n","Epoch 55/100\n","58/58 [==============================] - 0s 2ms/step - loss: 45.2154 - mse: 45.2154\n","Epoch 56/100\n","58/58 [==============================] - 0s 2ms/step - loss: 44.4352 - mse: 44.4352\n","Epoch 57/100\n","58/58 [==============================] - 0s 2ms/step - loss: 43.7520 - mse: 43.7520\n","Epoch 58/100\n","58/58 [==============================] - 0s 2ms/step - loss: 43.1628 - mse: 43.1628\n","Epoch 59/100\n","58/58 [==============================] - 0s 2ms/step - loss: 42.4602 - mse: 42.4602\n","Epoch 60/100\n","58/58 [==============================] - 0s 2ms/step - loss: 41.8789 - mse: 41.8789\n","Epoch 61/100\n","58/58 [==============================] - 0s 2ms/step - loss: 41.2558 - mse: 41.2558\n","Epoch 62/100\n","58/58 [==============================] - 0s 2ms/step - loss: 40.7351 - mse: 40.7351\n","Epoch 63/100\n","58/58 [==============================] - 0s 2ms/step - loss: 40.2157 - mse: 40.2157\n","Epoch 64/100\n","58/58 [==============================] - 0s 2ms/step - loss: 39.6813 - mse: 39.6813\n","Epoch 65/100\n","58/58 [==============================] - 0s 2ms/step - loss: 39.1927 - mse: 39.1927\n","Epoch 66/100\n","58/58 [==============================] - 0s 2ms/step - loss: 38.8107 - mse: 38.8107\n","Epoch 67/100\n","58/58 [==============================] - 0s 2ms/step - loss: 38.4126 - mse: 38.4126\n","Epoch 68/100\n","58/58 [==============================] - 0s 2ms/step - loss: 37.9423 - mse: 37.9423\n","Epoch 69/100\n","58/58 [==============================] - 0s 2ms/step - loss: 37.5925 - mse: 37.5925\n","Epoch 70/100\n","58/58 [==============================] - 0s 2ms/step - loss: 37.1577 - mse: 37.1577\n","Epoch 71/100\n","58/58 [==============================] - 0s 2ms/step - loss: 36.8973 - mse: 36.8973\n","Epoch 72/100\n","58/58 [==============================] - 0s 2ms/step - loss: 36.5009 - mse: 36.5009\n","Epoch 73/100\n","58/58 [==============================] - 0s 2ms/step - loss: 36.0643 - mse: 36.0643\n","Epoch 74/100\n","58/58 [==============================] - 0s 2ms/step - loss: 35.6834 - mse: 35.6834\n","Epoch 75/100\n","58/58 [==============================] - 0s 2ms/step - loss: 35.3824 - mse: 35.3824\n","Epoch 76/100\n","58/58 [==============================] - 0s 2ms/step - loss: 34.9627 - mse: 34.9627\n","Epoch 77/100\n","58/58 [==============================] - 0s 2ms/step - loss: 34.7734 - mse: 34.7734\n","Epoch 78/100\n","58/58 [==============================] - 0s 2ms/step - loss: 34.4358 - mse: 34.4358\n","Epoch 79/100\n","58/58 [==============================] - 0s 2ms/step - loss: 34.1390 - mse: 34.1390\n","Epoch 80/100\n","58/58 [==============================] - 0s 2ms/step - loss: 33.9612 - mse: 33.9612\n","Epoch 81/100\n","58/58 [==============================] - 0s 2ms/step - loss: 33.6509 - mse: 33.6509\n","Epoch 82/100\n","58/58 [==============================] - 0s 2ms/step - loss: 33.3855 - mse: 33.3855\n","Epoch 83/100\n","58/58 [==============================] - 0s 2ms/step - loss: 33.1844 - mse: 33.1844\n","Epoch 84/100\n","58/58 [==============================] - 0s 2ms/step - loss: 32.8722 - mse: 32.8722\n","Epoch 85/100\n","58/58 [==============================] - 0s 1ms/step - loss: 32.7876 - mse: 32.7876\n","Epoch 86/100\n","58/58 [==============================] - 0s 2ms/step - loss: 32.4633 - mse: 32.4633\n","Epoch 87/100\n","58/58 [==============================] - 0s 2ms/step - loss: 32.2365 - mse: 32.2365\n","Epoch 88/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.9341 - mse: 31.9341\n","Epoch 89/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.7939 - mse: 31.7939\n","Epoch 90/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.4308 - mse: 31.4308\n","Epoch 91/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.3039 - mse: 31.3039\n","Epoch 92/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.1774 - mse: 31.1774\n","Epoch 93/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.1050 - mse: 31.1050\n","Epoch 94/100\n","58/58 [==============================] - 0s 2ms/step - loss: 31.0541 - mse: 31.0541\n","Epoch 95/100\n","58/58 [==============================] - 0s 2ms/step - loss: 30.8861 - mse: 30.8861\n","Epoch 96/100\n","58/58 [==============================] - 0s 2ms/step - loss: 30.7113 - mse: 30.7113\n","Epoch 97/100\n","58/58 [==============================] - 0s 2ms/step - loss: 30.6223 - mse: 30.6223\n","Epoch 98/100\n","58/58 [==============================] - 0s 7ms/step - loss: 30.5247 - mse: 30.5247\n","Epoch 99/100\n","58/58 [==============================] - 0s 6ms/step - loss: 30.3650 - mse: 30.3650\n","Epoch 100/100\n","58/58 [==============================] - 0s 2ms/step - loss: 30.2807 - mse: 30.2807\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f27ff494550>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"sqUj3TNl6Ufj","executionInfo":{"status":"ok","timestamp":1672628994048,"user_tz":-540,"elapsed":14,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"b8694dd2-1019-4998-f3f1-0fce49558bee"},"source":["import matplotlib.pyplot as plt \n","y_test_predict = model.predict(X_test)\n","plt.scatter(y_test, y_test_predict)\n","plt.plot([40, 100], [40, 100], c='k')\n","plt.show()"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["15/15 [==============================] - 0s 1ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from tensorflow import keras\n","\n","data_mnist = keras.datasets.mnist\n","(train_images, train_labels), (test_images, test_labels) = data_mnist.load_data()\n","\n","print(train_images.shape)\n","print(train_labels.shape)\n","print(test_images.shape)\n","print(test_labels.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sENWSJREddFh","executionInfo":{"status":"ok","timestamp":1672629055898,"user_tz":-540,"elapsed":2035,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"07a32488-424b-46b2-c509-a122ce52ecf6"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 1s 0us/step\n","(60000, 28, 28)\n","(60000,)\n","(10000, 28, 28)\n","(10000,)\n"]}]},{"cell_type":"code","source":["img = plt.imshow(train_images[2])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"IrPCjaGhdf4F","executionInfo":{"status":"ok","timestamp":1672629065155,"user_tz":-540,"elapsed":3,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"7ba3e648-3197-4dff-d496-1a8274027369"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["train_images_reshape = train_images.reshape([train_images.shape[0], train_images.shape[1]*train_images.shape[2]])\n","test_images_reshape = test_images.reshape([test_images.shape[0], test_images.shape[1]*test_images.shape[2]])\n","print(train_images_reshape.shape)\n","print(train_images_reshape[0,0:300])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mYpt3XJUdhyf","executionInfo":{"status":"ok","timestamp":1672629073399,"user_tz":-540,"elapsed":2,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"8499e64b-0d90-48b5-ed00-561cabed172f"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["(60000, 784)\n","[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0   3  18  18  18 126 136 175  26 166 255\n"," 247 127   0   0   0   0   0   0   0   0   0   0   0   0  30  36  94 154\n"," 170 253 253 253 253 253 225 172 253 242 195  64   0   0   0   0   0   0\n","   0   0   0   0   0  49 238 253 253 253 253 253 253 253 253 251  93  82\n","  82  56  39   0   0   0   0   0   0   0   0   0   0   0   0  18 219 253\n"," 253 253 253 253 198 182 247 241   0   0   0   0   0   0   0   0   0   0\n","   0   0   0   0   0   0   0   0  80 156 107 253 253 205  11   0  43 154\n","   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n","   0  14   1 154 253  90   0   0   0   0   0   0]\n"]}]},{"cell_type":"code","source":["train_images_reshape_norm = train_images_reshape/255\n","test_images_reshape_norm = test_images_reshape/255\n","print('최대: {}, 최소: {}'.format(np.max(train_images_reshape_norm),np.min(train_images_reshape_norm)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBjkFDY2dj78","executionInfo":{"status":"ok","timestamp":1672629082970,"user_tz":-540,"elapsed":607,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"d7053011-2a78-4719-ca17-06f267ab128b"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["최대: 1.0, 최소: 0.0\n"]}]},{"cell_type":"code","source":["idx1 = np.where(train_labels == 6)\n","idx2 = np.where(train_labels == 8)\n","idx12 = np.union1d(idx1, idx2)\n","\n","idx3 = np.where(test_labels == 6)\n","idx4 = np.where(test_labels == 8)\n","idx34 = np.union1d(idx3, idx4)\n","\n","train_x = train_images_reshape_norm[idx12,:]\n","train_y = train_labels[idx12]\n","test_x = test_images_reshape_norm[idx34,:]\n","test_y = test_labels[idx34]\n","\n","print(train_x.shape)\n","print(train_y.shape)\n","print(test_x.shape)\n","print(test_y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nzOd4DgRdmOU","executionInfo":{"status":"ok","timestamp":1672629092358,"user_tz":-540,"elapsed":2,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"71d86d2a-37ea-4bb0-f05e-ac08b609558d"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["(11769, 784)\n","(11769,)\n","(1932, 784)\n","(1932,)\n"]}]},{"cell_type":"code","source":["from sklearn.neural_network import MLPClassifier\n","\n","clf = MLPClassifier(hidden_layer_sizes=(10,), )\n","clf.fit(train_x, train_y)\n","test_y_hat = clf.predict(test_x)\n","\n","print(clf)\n","print(clf.loss_curve_)\n","print(test_y[0:100])\n","print(test_y_hat[0:100])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MR7SvVtSdo0W","executionInfo":{"status":"ok","timestamp":1672629115007,"user_tz":-540,"elapsed":13873,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"5ead62e1-6bdb-47a5-b94f-6f4e4d3b5d5e"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["MLPClassifier(hidden_layer_sizes=(10,))\n","[0.29500686845161134, 0.07222578605225961, 0.04953677773343404, 0.04060303912980599, 0.03571719247573945, 0.03231471149331195, 0.029977966922232792, 0.027799855480852714, 0.026116455993822136, 0.024707067283512782, 0.023182192462748167, 0.02199597808558593, 0.020341539449522193, 0.01911377275550112, 0.018009552896923887, 0.01702517114945929, 0.016285599427841194, 0.015423398463173208, 0.014737600081336191, 0.013873102958771274, 0.013342549199153508, 0.012566116124207017, 0.012089158272400225, 0.011557345529014981, 0.011212135463121577, 0.010659285833849848, 0.010298091598426616, 0.009816168636211714, 0.00940945369882187, 0.009019476147771134, 0.008706007198484612, 0.008394035350560226, 0.008122863525484905, 0.007819031429789392, 0.007626697875151427, 0.00720902165814774, 0.007072538853830844, 0.0067131772348666486, 0.006638358854101369, 0.006464835803828538, 0.0062562736006553255, 0.0059208137399847675, 0.0057542476831334895, 0.005534498411774006, 0.00529527188901525, 0.005108724847272586, 0.005169670865983902, 0.005031614587871791, 0.004640739431598179, 0.004659238115715455, 0.004314318639417506, 0.004162428392642129, 0.003977137212211751, 0.0038103749849262175, 0.003777121394586515, 0.003489809561410083, 0.003618319806170624, 0.0034351922140733967, 0.003307842280584193, 0.0033236660092477, 0.0031286452581478844, 0.002841933192660906, 0.0029304388725202974, 0.002867104224171949, 0.002644131129429219, 0.0025468964270446387, 0.0025026832945719757, 0.0023965883021354623, 0.002475990578364289, 0.002508137265954246, 0.002189915503498063, 0.0021816724903174, 0.002186293169923799, 0.002113147237932111, 0.0019315864021649547, 0.001930637948078763, 0.0018277960739695217, 0.0017663137990981482, 0.0016935360568024473, 0.0016524558660044142, 0.001717053985397376, 0.001663336390658198, 0.0016255016713985577, 0.0015274498878670238, 0.0013871148105083107, 0.0014383436765881437, 0.001372310043401147, 0.0014473757596874196, 0.0012850900452631372, 0.0012520213601807369, 0.0012429458729431705, 0.0011838847927723, 0.001154438475829006, 0.0011066324685534948, 0.0010724177528101014, 0.0011229327513776466]\n","[6 6 6 6 6 8 6 6 8 6 6 6 6 8 6 8 6 6 8 6 6 8 6 6 6 8 8 8 8 6 6 6 8 8 8 8 8\n"," 6 8 8 8 8 6 8 8 6 8 6 6 8 6 8 6 6 6 8 8 6 6 8 6 8 8 8 8 8 8 6 6 6 6 8 6 6\n"," 6 8 8 8 6 8 8 8 6 6 6 6 8 8 6 8 8 8 8 6 8 6 6 8 8 8]\n","[6 6 6 6 6 8 6 6 8 6 6 6 6 8 6 8 6 6 8 6 6 8 6 6 6 8 8 8 8 6 6 6 8 8 8 8 8\n"," 6 8 8 8 8 6 8 8 6 8 6 6 8 6 8 6 6 6 8 8 6 6 8 6 8 8 8 8 8 8 6 6 6 6 8 6 6\n"," 6 8 8 8 6 8 8 8 6 6 6 6 8 8 6 8 8 8 8 6 8 6 6 8 8 8]\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","accuracy_score(test_y, test_y_hat)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t1QtCRJoduZc","executionInfo":{"status":"ok","timestamp":1672629124715,"user_tz":-540,"elapsed":516,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"0d2e2150-e3f6-4397-c66f-8fc29865bcf6"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9953416149068323"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelBinarizer\n","\n","encoder = LabelBinarizer()\n","train_y_onehot = encoder.fit_transform(train_labels)\n","test_y_onehot = encoder.fit_transform(test_labels)\n","\n","print(train_labels[0:10])\n","print(train_y_onehot[0:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2H4GevOdwNN","executionInfo":{"status":"ok","timestamp":1672629133664,"user_tz":-540,"elapsed":2,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"728de83f-7cd2-4aec-ee19-75fb9251ec8b"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 0 4 1 9 2 1 3 1 4]\n","[[0 0 0 0 0 1 0 0 0 0]\n"," [1 0 0 0 0 0 0 0 0 0]\n"," [0 0 0 0 1 0 0 0 0 0]\n"," [0 1 0 0 0 0 0 0 0 0]\n"," [0 0 0 0 0 0 0 0 0 1]\n"," [0 0 1 0 0 0 0 0 0 0]\n"," [0 1 0 0 0 0 0 0 0 0]\n"," [0 0 0 1 0 0 0 0 0 0]\n"," [0 1 0 0 0 0 0 0 0 0]\n"," [0 0 0 0 1 0 0 0 0 0]]\n"]}]},{"cell_type":"code","source":["clf2 = MLPClassifier(hidden_layer_sizes=(50,))\n","\n","train_x = train_images_reshape_norm\n","train_y = train_y_onehot\n","test_x = test_images_reshape_norm\n","test_y = test_y_onehot\n","clf2.fit(train_x, train_y)\n","test_y_hat = clf2.predict(test_x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vpOY6pF2dz5B","executionInfo":{"status":"ok","timestamp":1672629549221,"user_tz":-540,"elapsed":401452,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"de4aab5e-8517-4f78-cfbc-202545856e0e"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:699: UserWarning: Training interrupted by user.\n","  warnings.warn(\"Training interrupted by user.\")\n"]}]},{"cell_type":"code","source":["test_y_argmax = np.argmax(test_y, axis=1)\n","test_y_hat_argmax = np.argmax(test_y_hat, axis=1)\n","print(test_y_argmax[0:10])\n","print(test_y_hat_argmax[0:10])\n","\n","accuracy_score(test_y_argmax, test_y_hat_argmax)"],"metadata":{"id":"jkbsKYK9fKXv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf3 = MLPClassifier(hidden_layer_sizes=(50, 100, 50))\n","\n","train_x = train_images_reshape_norm\n","train_y = train_y_onehot\n","test_x = test_images_reshape_norm\n","test_y = test_y_onehot\n","clf3.fit(train_x, train_y)\n","test_y_hat = clf3.predict(test_x)\n","\n","test_y_argmax = np.argmax(test_y, axis=1)\n","test_y_hat_argmax = np.argmax(test_y_hat, axis=1)\n","\n","accuracy_score(test_y_argmax, test_y_hat_argmax)"],"metadata":{"id":"1QuKMe1ifMMC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from tensorflow import keras\n","from tensorflow.keras import layers, models, optimizers\n","from tensorflow.keras.utils import to_categorical\n","\n","\n","data_mnist = keras.datasets.mnist\n","(train_images, train_labels), (test_images, test_labels) = data_mnist.load_data()\n","\n","train_images_reshape = train_images.reshape([train_images.shape[0], train_images.shape[1]*train_images.shape[2]])\n","test_images_reshape = test_images.reshape([test_images.shape[0], test_images.shape[1]*test_images.shape[2]])\n","\n","train_images_reshape_norm = train_images_reshape/255\n","test_images_reshape_norm = test_images_reshape/255\n","\n","train_y_onehot = to_categorical(train_labels)\n","test_y_onehot = to_categorical(test_labels)\n","\n","print(train_labels[0:10])\n","print(train_y_onehot[0:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vj2_r_eBfPQ5","executionInfo":{"status":"ok","timestamp":1672629558017,"user_tz":-540,"elapsed":1076,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"b6995522-6f14-46d6-eb6c-f1bd1c0160df"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 0 4 1 9 2 1 3 1 4]\n","[[0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]\n"," [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]\n"," [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["train_x = train_images_reshape_norm\n","train_y = train_y_onehot\n","test_x = test_images_reshape_norm\n","test_y = test_y_onehot\n","\n","input_shape = (train_x.shape[1], )\n","\n","mlp_model = models.Sequential()\n","mlp_model.add(layers.Dense(units = 50, activation = 'relu', input_shape=input_shape))\n","mlp_model.add(layers.Dense(units = 100, activation = 'relu'))\n","mlp_model.add(layers.Dense(units = 50, activation = 'relu'))\n","mlp_model.add(layers.Dense(units = 10, activation = 'softmax'))\n","\n","mlp_model.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","mlp_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0VYB_maPfQzd","executionInfo":{"status":"ok","timestamp":1672629564598,"user_tz":-540,"elapsed":448,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"ff1a58a9-1e4f-43ca-de32-755b62cc8d4f"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_3 (Dense)             (None, 50)                39250     \n","                                                                 \n"," dense_4 (Dense)             (None, 100)               5100      \n","                                                                 \n"," dense_5 (Dense)             (None, 50)                5050      \n","                                                                 \n"," dense_6 (Dense)             (None, 10)                510       \n","                                                                 \n","=================================================================\n","Total params: 49,910\n","Trainable params: 49,910\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["history = mlp_model.fit(train_x, train_y, validation_data = [test_x, test_y], batch_size=50, epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n8FFvfU7fSCv","executionInfo":{"status":"ok","timestamp":1672630038154,"user_tz":-540,"elapsed":460726,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"14fa35f8-c50c-44c5-a0bc-ca968cd6bddc"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.3081 - accuracy: 0.9089 - val_loss: 0.1512 - val_accuracy: 0.9548\n","Epoch 2/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.1289 - accuracy: 0.9615 - val_loss: 0.1156 - val_accuracy: 0.9639\n","Epoch 3/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0971 - accuracy: 0.9694 - val_loss: 0.1228 - val_accuracy: 0.9598\n","Epoch 4/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0786 - accuracy: 0.9754 - val_loss: 0.0878 - val_accuracy: 0.9723\n","Epoch 5/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0651 - accuracy: 0.9794 - val_loss: 0.0874 - val_accuracy: 0.9738\n","Epoch 6/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0546 - accuracy: 0.9826 - val_loss: 0.0958 - val_accuracy: 0.9725\n","Epoch 7/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0492 - accuracy: 0.9841 - val_loss: 0.0898 - val_accuracy: 0.9735\n","Epoch 8/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0424 - accuracy: 0.9859 - val_loss: 0.0961 - val_accuracy: 0.9708\n","Epoch 9/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0368 - accuracy: 0.9879 - val_loss: 0.0904 - val_accuracy: 0.9736\n","Epoch 10/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0330 - accuracy: 0.9892 - val_loss: 0.1094 - val_accuracy: 0.9714\n","Epoch 11/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0327 - accuracy: 0.9892 - val_loss: 0.0994 - val_accuracy: 0.9742\n","Epoch 12/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0271 - accuracy: 0.9908 - val_loss: 0.1013 - val_accuracy: 0.9740\n","Epoch 13/100\n","1200/1200 [==============================] - 6s 5ms/step - loss: 0.0232 - accuracy: 0.9916 - val_loss: 0.1013 - val_accuracy: 0.9759\n","Epoch 14/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0245 - accuracy: 0.9915 - val_loss: 0.0917 - val_accuracy: 0.9751\n","Epoch 15/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0222 - accuracy: 0.9922 - val_loss: 0.1116 - val_accuracy: 0.9729\n","Epoch 16/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0191 - accuracy: 0.9937 - val_loss: 0.1119 - val_accuracy: 0.9746\n","Epoch 17/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0199 - accuracy: 0.9936 - val_loss: 0.1048 - val_accuracy: 0.9759\n","Epoch 18/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0173 - accuracy: 0.9943 - val_loss: 0.1263 - val_accuracy: 0.9725\n","Epoch 19/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0172 - accuracy: 0.9942 - val_loss: 0.1263 - val_accuracy: 0.9736\n","Epoch 20/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0168 - accuracy: 0.9943 - val_loss: 0.1140 - val_accuracy: 0.9761\n","Epoch 21/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0153 - accuracy: 0.9950 - val_loss: 0.1243 - val_accuracy: 0.9761\n","Epoch 22/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0156 - accuracy: 0.9946 - val_loss: 0.1108 - val_accuracy: 0.9778\n","Epoch 23/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0121 - accuracy: 0.9959 - val_loss: 0.1306 - val_accuracy: 0.9757\n","Epoch 24/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0146 - accuracy: 0.9954 - val_loss: 0.1437 - val_accuracy: 0.9730\n","Epoch 25/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0138 - accuracy: 0.9954 - val_loss: 0.1386 - val_accuracy: 0.9772\n","Epoch 26/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0132 - accuracy: 0.9958 - val_loss: 0.1226 - val_accuracy: 0.9772\n","Epoch 27/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0134 - accuracy: 0.9955 - val_loss: 0.1208 - val_accuracy: 0.9772\n","Epoch 28/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0109 - accuracy: 0.9965 - val_loss: 0.1329 - val_accuracy: 0.9759\n","Epoch 29/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0119 - accuracy: 0.9963 - val_loss: 0.1256 - val_accuracy: 0.9768\n","Epoch 30/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0093 - accuracy: 0.9970 - val_loss: 0.1579 - val_accuracy: 0.9708\n","Epoch 31/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0107 - accuracy: 0.9962 - val_loss: 0.1330 - val_accuracy: 0.9771\n","Epoch 32/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0130 - accuracy: 0.9958 - val_loss: 0.1466 - val_accuracy: 0.9760\n","Epoch 33/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0110 - accuracy: 0.9967 - val_loss: 0.1526 - val_accuracy: 0.9758\n","Epoch 34/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0100 - accuracy: 0.9965 - val_loss: 0.1559 - val_accuracy: 0.9751\n","Epoch 35/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0107 - accuracy: 0.9967 - val_loss: 0.1375 - val_accuracy: 0.9774\n","Epoch 36/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0100 - accuracy: 0.9967 - val_loss: 0.1612 - val_accuracy: 0.9742\n","Epoch 37/100\n","1200/1200 [==============================] - 6s 5ms/step - loss: 0.0104 - accuracy: 0.9970 - val_loss: 0.1595 - val_accuracy: 0.9756\n","Epoch 38/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0115 - accuracy: 0.9962 - val_loss: 0.1541 - val_accuracy: 0.9768\n","Epoch 39/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0089 - accuracy: 0.9969 - val_loss: 0.1415 - val_accuracy: 0.9753\n","Epoch 40/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0099 - accuracy: 0.9971 - val_loss: 0.1674 - val_accuracy: 0.9736\n","Epoch 41/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0093 - accuracy: 0.9969 - val_loss: 0.1486 - val_accuracy: 0.9763\n","Epoch 42/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0100 - accuracy: 0.9971 - val_loss: 0.1483 - val_accuracy: 0.9769\n","Epoch 43/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0062 - accuracy: 0.9980 - val_loss: 0.1682 - val_accuracy: 0.9766\n","Epoch 44/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0046 - accuracy: 0.9984 - val_loss: 0.1905 - val_accuracy: 0.9730\n","Epoch 45/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0117 - accuracy: 0.9968 - val_loss: 0.1444 - val_accuracy: 0.9780\n","Epoch 46/100\n","1200/1200 [==============================] - 5s 5ms/step - loss: 0.0115 - accuracy: 0.9966 - val_loss: 0.1437 - val_accuracy: 0.9779\n","Epoch 47/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0062 - accuracy: 0.9980 - val_loss: 0.1602 - val_accuracy: 0.9766\n","Epoch 48/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0092 - accuracy: 0.9971 - val_loss: 0.1606 - val_accuracy: 0.9770\n","Epoch 49/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0069 - accuracy: 0.9979 - val_loss: 0.1665 - val_accuracy: 0.9765\n","Epoch 50/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0094 - accuracy: 0.9972 - val_loss: 0.1669 - val_accuracy: 0.9770\n","Epoch 51/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0071 - accuracy: 0.9978 - val_loss: 0.1963 - val_accuracy: 0.9738\n","Epoch 52/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0078 - accuracy: 0.9977 - val_loss: 0.1692 - val_accuracy: 0.9781\n","Epoch 53/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0058 - accuracy: 0.9982 - val_loss: 0.1777 - val_accuracy: 0.9768\n","Epoch 54/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0075 - accuracy: 0.9977 - val_loss: 0.1747 - val_accuracy: 0.9760\n","Epoch 55/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0072 - accuracy: 0.9977 - val_loss: 0.1892 - val_accuracy: 0.9749\n","Epoch 56/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0089 - accuracy: 0.9976 - val_loss: 0.1954 - val_accuracy: 0.9736\n","Epoch 57/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0071 - accuracy: 0.9978 - val_loss: 0.2005 - val_accuracy: 0.9762\n","Epoch 58/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0086 - accuracy: 0.9975 - val_loss: 0.1962 - val_accuracy: 0.9756\n","Epoch 59/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0076 - accuracy: 0.9975 - val_loss: 0.2071 - val_accuracy: 0.9754\n","Epoch 60/100\n","1200/1200 [==============================] - 6s 5ms/step - loss: 0.0056 - accuracy: 0.9982 - val_loss: 0.1662 - val_accuracy: 0.9779\n","Epoch 61/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0085 - accuracy: 0.9975 - val_loss: 0.2141 - val_accuracy: 0.9751\n","Epoch 62/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0077 - accuracy: 0.9979 - val_loss: 0.1990 - val_accuracy: 0.9759\n","Epoch 63/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0072 - accuracy: 0.9979 - val_loss: 0.1931 - val_accuracy: 0.9770\n","Epoch 64/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0070 - accuracy: 0.9982 - val_loss: 0.2357 - val_accuracy: 0.9720\n","Epoch 65/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0080 - accuracy: 0.9979 - val_loss: 0.1751 - val_accuracy: 0.9775\n","Epoch 66/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0062 - accuracy: 0.9981 - val_loss: 0.1893 - val_accuracy: 0.9777\n","Epoch 67/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0064 - accuracy: 0.9983 - val_loss: 0.1967 - val_accuracy: 0.9758\n","Epoch 68/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0085 - accuracy: 0.9977 - val_loss: 0.2069 - val_accuracy: 0.9754\n","Epoch 69/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0060 - accuracy: 0.9982 - val_loss: 0.1898 - val_accuracy: 0.9773\n","Epoch 70/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0090 - accuracy: 0.9974 - val_loss: 0.1912 - val_accuracy: 0.9784\n","Epoch 71/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0041 - accuracy: 0.9989 - val_loss: 0.1977 - val_accuracy: 0.9769\n","Epoch 72/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0076 - accuracy: 0.9979 - val_loss: 0.2054 - val_accuracy: 0.9773\n","Epoch 73/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0070 - accuracy: 0.9981 - val_loss: 0.1941 - val_accuracy: 0.9765\n","Epoch 74/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0070 - accuracy: 0.9980 - val_loss: 0.2040 - val_accuracy: 0.9764\n","Epoch 75/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0081 - accuracy: 0.9976 - val_loss: 0.1867 - val_accuracy: 0.9764\n","Epoch 76/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0031 - accuracy: 0.9990 - val_loss: 0.2075 - val_accuracy: 0.9751\n","Epoch 77/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0108 - accuracy: 0.9971 - val_loss: 0.2076 - val_accuracy: 0.9775\n","Epoch 78/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0030 - accuracy: 0.9990 - val_loss: 0.2107 - val_accuracy: 0.9771\n","Epoch 79/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0084 - accuracy: 0.9978 - val_loss: 0.2107 - val_accuracy: 0.9746\n","Epoch 80/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0069 - accuracy: 0.9981 - val_loss: 0.1891 - val_accuracy: 0.9780\n","Epoch 81/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0056 - accuracy: 0.9983 - val_loss: 0.2002 - val_accuracy: 0.9774\n","Epoch 82/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0061 - accuracy: 0.9983 - val_loss: 0.1985 - val_accuracy: 0.9774\n","Epoch 83/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0075 - accuracy: 0.9981 - val_loss: 0.2145 - val_accuracy: 0.9763\n","Epoch 84/100\n","1200/1200 [==============================] - 6s 5ms/step - loss: 0.0067 - accuracy: 0.9981 - val_loss: 0.2167 - val_accuracy: 0.9763\n","Epoch 85/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0048 - accuracy: 0.9986 - val_loss: 0.2017 - val_accuracy: 0.9791\n","Epoch 86/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0063 - accuracy: 0.9985 - val_loss: 0.2229 - val_accuracy: 0.9758\n","Epoch 87/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0077 - accuracy: 0.9980 - val_loss: 0.2045 - val_accuracy: 0.9783\n","Epoch 88/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0053 - accuracy: 0.9984 - val_loss: 0.2182 - val_accuracy: 0.9749\n","Epoch 89/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0064 - accuracy: 0.9979 - val_loss: 0.2086 - val_accuracy: 0.9779\n","Epoch 90/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0029 - accuracy: 0.9993 - val_loss: 0.2314 - val_accuracy: 0.9773\n","Epoch 91/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0076 - accuracy: 0.9982 - val_loss: 0.2114 - val_accuracy: 0.9780\n","Epoch 92/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0075 - accuracy: 0.9980 - val_loss: 0.2389 - val_accuracy: 0.9753\n","Epoch 93/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0045 - accuracy: 0.9988 - val_loss: 0.1964 - val_accuracy: 0.9791\n","Epoch 94/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 6.5313e-04 - accuracy: 0.9998 - val_loss: 0.2208 - val_accuracy: 0.9761\n","Epoch 95/100\n","1200/1200 [==============================] - 4s 3ms/step - loss: 0.0095 - accuracy: 0.9976 - val_loss: 0.2388 - val_accuracy: 0.9765\n","Epoch 96/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0087 - accuracy: 0.9980 - val_loss: 0.2312 - val_accuracy: 0.9762\n","Epoch 97/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0049 - accuracy: 0.9987 - val_loss: 0.2316 - val_accuracy: 0.9790\n","Epoch 98/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0063 - accuracy: 0.9986 - val_loss: 0.2266 - val_accuracy: 0.9779\n","Epoch 99/100\n","1200/1200 [==============================] - 4s 4ms/step - loss: 0.0060 - accuracy: 0.9985 - val_loss: 0.2472 - val_accuracy: 0.9765\n","Epoch 100/100\n","1200/1200 [==============================] - 5s 4ms/step - loss: 0.0026 - accuracy: 0.9993 - val_loss: 0.2400 - val_accuracy: 0.9775\n"]}]},{"cell_type":"code","source":["plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.show()\n","\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('model loss')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.show()\n","\n","print(history.history['val_accuracy'])\n","print(np.max(history.history['val_accuracy']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":630},"id":"VB57wShyfTe5","executionInfo":{"status":"ok","timestamp":1672630071363,"user_tz":-540,"elapsed":683,"user":{"displayName":"양희철","userId":"09168520931095458571"}},"outputId":"15ac31e1-8beb-412a-9b34-3f96e8dbbdfd"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["[0.954800009727478, 0.9639000296592712, 0.9598000049591064, 0.9722999930381775, 0.973800003528595, 0.9725000262260437, 0.9735000133514404, 0.97079998254776, 0.9735999703407288, 0.9714000225067139, 0.9742000102996826, 0.9739999771118164, 0.9758999943733215, 0.9750999808311462, 0.9728999733924866, 0.9746000170707703, 0.9758999943733215, 0.9725000262260437, 0.9735999703407288, 0.9761000275611877, 0.9761000275611877, 0.9778000116348267, 0.9757000207901001, 0.9729999899864197, 0.9771999716758728, 0.9771999716758728, 0.9771999716758728, 0.9758999943733215, 0.9768000245094299, 0.97079998254776, 0.9771000146865845, 0.9760000109672546, 0.9757999777793884, 0.9750999808311462, 0.977400004863739, 0.9742000102996826, 0.975600004196167, 0.9768000245094299, 0.9753000140190125, 0.9735999703407288, 0.9763000011444092, 0.9768999814987183, 0.9765999913215637, 0.9729999899864197, 0.9779999852180481, 0.9779000282287598, 0.9765999913215637, 0.9769999980926514, 0.9764999747276306, 0.9769999980926514, 0.973800003528595, 0.9781000018119812, 0.9768000245094299, 0.9760000109672546, 0.9749000072479248, 0.9735999703407288, 0.9761999845504761, 0.975600004196167, 0.9753999710083008, 0.9779000282287598, 0.9750999808311462, 0.9758999943733215, 0.9769999980926514, 0.972000002861023, 0.9775000214576721, 0.9776999950408936, 0.9757999777793884, 0.9753999710083008, 0.9772999882698059, 0.9783999919891357, 0.9768999814987183, 0.9772999882698059, 0.9764999747276306, 0.9764000177383423, 0.9764000177383423, 0.9750999808311462, 0.9775000214576721, 0.9771000146865845, 0.9746000170707703, 0.9779999852180481, 0.977400004863739, 0.977400004863739, 0.9763000011444092, 0.9763000011444092, 0.9790999889373779, 0.9757999777793884, 0.9782999753952026, 0.9749000072479248, 0.9779000282287598, 0.9772999882698059, 0.9779999852180481, 0.9753000140190125, 0.9790999889373779, 0.9761000275611877, 0.9764999747276306, 0.9761999845504761, 0.9789999723434448, 0.9779000282287598, 0.9764999747276306, 0.9775000214576721]\n","0.9790999889373779\n"]}]}]}